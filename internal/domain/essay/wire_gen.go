// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package essay

import (
	"blog/internal/domain/essay/controller"
	"blog/internal/domain/essay/repository/cache"
	"blog/internal/domain/essay/repository/db"
	"blog/internal/domain/essay/router"
	service2 "blog/internal/domain/essay/service"
	db2 "blog/internal/domain/label/repository/db"
	"blog/internal/domain/label/service"
	"blog/pkg/repository"
	"github.com/gin-gonic/gin"
	"github.com/google/wire"
)

// Injectors from wire.go:

func InitV1(r *gin.RouterGroup) error {
	gormDB := repository.GormDB()
	dbDB := db.NewDB(gormDB)
	client := repository.RedisClient()
	cacheCache := cache.NewCache(client)
	db3 := db2.NewDB(gormDB)
	serviceService := service.NewService(db3)
	service3 := service2.NewService(dbDB, cacheCache, serviceService)
	controllerController := controller.NewController(service3)
	error2 := router.RegisterV1(r, controllerController)
	return error2
}

// wire.go:

// 数据层依赖
var dataSet = wire.NewSet(repository.GormDB, repository.RedisClient)

// 标签领域依赖
var labelSet = wire.NewSet(db.NewDB, service.NewService)

// 文章领域依赖
var essaySet = wire.NewSet(db2.NewDB, cache.NewCache, service2.NewService, controller.NewController, router.RegisterV1)
